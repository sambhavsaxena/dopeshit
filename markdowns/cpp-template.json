{
  "Basic code": {
    "prefix": "code",
    "body": [
      "#include <bits/stdc++.h>",
      "using namespace std;\n",
      "int main()",
      "{",
      "\t$1",
      "\treturn 0;",
      "}\n"
    ],
    "description": "Log output to console"
  },
  "Ternary print statement": {
    "prefix": "terp",
    "body": ["$1 ? cout<<\"$2\"<<endl : cout<<\"$3\"<<endl;"],
    "description": "Log output to console"
  },
  "Sieve": {
    "prefix": "sieve",
    "body": [
      "vector<ll> sieve(ll n) // sieve of primes",
      "{",
      "\tvector<bool> prime(n + 1, true);",
      "\tvector<ll> primes;",
      "\tfor (ll p = 2; p * p <= n; p++)",
      "\t{",
      "\t\tif (prime[p])",
      "\t\t{",
      "\t\t\tfor (ll i = p * 2; i <= n; i += p)",
      "\t\t\t{",
      "\t\t\t\tprime[i] = false;",
      "\t\t\t}",
      "\t\t}",
      "\t}",
      "\tfor (ll p = 2; p <= n; p++)",
      "\t{",
      "\t\tif (prime[p])",
      "\t\t{",
      "\t\t\tprimes.push_back(p);",
      "\t\t}",
      "\t}",
      "\treturn primes;",
      "}\n"
    ],
    "description": "Get primes till n"
  },
  "Palindrome": {
    "prefix": "palindrome",
    "body": [
      "bool palindrome(string &s)",
      "{",
      "\tstring t = s;",
      "\treverse(all(t));",
      "\treturn t == s;",
      "}\n"
    ],
    "description": "check palindrome"
  },
  "Default Input Vector": {
    "prefix": "definv",
    "body": ["ll n;", "cin>>n;", "vl v(n);", "loopx cin>>v[i];"],
    "description": "default input vector"
  },
  "Prefix Sum": {
    "prefix": "prefixsum",
    "body": [
      "vl prefixsum(vl &v)",
      "{",
      "\tvl p(v.size());",
      "\tp[0] = v[0];",
      "\tfor (ll i = 1; i < v.size(); i++)",
      "\t{",
      "\t\tp[i] = p[i - 1] + v[i];",
      "\t}",
      "\treturn p;",
      "}\n"
    ],
    "description": "prefix sum"
  },
  "Max repeating Element": {
    "prefix": "mre",
    "body": [
      "ll mre(vector<ll> &a)",
      "{",
      "\nll n = a.size(), max = 0, id = -1;",
      "\tloop(i, 0, n)",
      "\t{",
      "\t\ta[a[i] % n] += n;",
      "\t}",
      "\tloop(i, 0, n)",
      "\t{",
      "\t\tif(a[i] / n > max)",
      "\t\t{",
      "\t\t\tmax = a[i] / n;",
      "\t\t\tid = i;",
      "\t\t}",
      "\t}",
      "\treturn id;",
      "}\n"
    ],
    "description": "returns the maximum repeating element"
  },
  "Bitmask": {
    "prefix": "bitmask",
    "body": [
      "int setbit(int n, int pos)",
      "{",
      "\treturn n | (1<<pos);",
      "}",
      "int clearbit(int n, int pos)",
      "{",
      "\treturn n & ~(1<<pos);",
      "}",
      "int togglebit(int n, int pos)",
      "{",
      "\treturn n ^ (1<<pos);",
      "}",
      "bool checkbit(int n, int pos)",
      "{",
      "\treturn n & (1<<pos);",
      "}\n"
    ],
    "description": "bit operations"
  },
  "Longest increasing subsequence": {
    "prefix": "lis",
    "body": [
      "ll lis(vector<ll> &a)",
      "{",
      "\tll n = a.size();",
      "\tvector<ll> dp(n, 1);",
      "\tfor(ll i = 1; i < n; i++)",
      "\t{",
      "\t\tfor(ll j = 0; j < i; j++)",
      "\t\t{",
      "\t\t\tif(a[i] > a[j])",
      "\t\t\t{",
      "\t\t\t\tdp[i] = max(dp[i], dp[j] + 1);",
      "\t\t\t}",
      "\t\t}",
      "\t}",
      "\treturn *max_element(all(dp));",
      "}\n"
    ],
    "description": "longest increasing subsequence"
  },
  "Binary Search on Vector": {
    "prefix": "bins",
    "body": [
      "ll binarysearch(vector<ll> &a, ll x)",
      "{",
      "\tll n = a.size();",
      "\tll l = 0, r = n - 1;",
      "\twhile(l <= r)",
      "\t{",
      "\t\tll mid = l + (r - l) / 2",
      "\t\tif(a[mid] == x)",
      "\t\t{",
      "\t\t\treturn mid;",
      "\t\t}",
      "\t\telse if(a[mid] < x)",
      "\t\t{",
      "\t\t\tl = mid + 1;",
      "\t\t}",
      "\t\telse",
      "\t\t{",
      "\t\t\tr = mid - 1;",
      "\t\t}",
      "\t}",
      "\treturn -1;",
      "}\n"
    ],
    "description": "binary search over vectors"
  },
  "Problem template": {
    "prefix": "cpp",
    "body": [
      "//Author: Sambhav Saxena\n",
      "/*\n",
      " ------------------------FOR TLE------------------------\n",
      "MAX value of N                    Time complexity",
      "10^9                              O(logN) or sqrt(N)",
      "10^8                              O(N) Edge fit",
      "10^7                              O(N) Partial fit",
      "10^6                              O(N) Best fit",
      "10^5                              O(NlogN)",
      "10^4                              O(N ^ 2)",
      "10^2                              O(N ^ 3)",
      "<= 160                            O(N ^ 4)",
      "<= 18                             O(2 ^ N * N ^ 2)",
      "<= 10                             O(N!), O(2 ^ N)",
      "Upper Case                        65 - 90",
      "Lower Case                        97 - 122",
      "Numbers                           48 - 57\n",
      "*/\n",
      "// ------------------------DEFINITIONS & INCLUSIONS------------------------\n",
      "#include<bits/stdc++.h>",
      "//#pragma comment(linker, \"/STACK:36777216\")//For unbounded call stack",
      "#define MOD 1000000007",
      "#define PI 3.141592653589793238462",
      "#define ln 1e6",
      "#define ll long long",
      "#define ld long double",
      "#define loop(i, a, b) for (ll i = a; i < b; ++i)",
      "#define loopr(i, a, b) for (ll i = b; i >= 0; i--)",
      "#define loopx for (ll i = 0; i < n; ++i)",
      "#define trav(a, b) for(auto& a : b)",
      "#define all(x) x.begin(), x.end()",
      "#define mid(l, r) (l + (r - l / 2))",
      "#define binpow(n, i) n << i",
      "#define vl vector<ll>",
      "#define pl pair<ll, ll>",
      "#define vp vector<pair<ll, ll>>",
      "#define ml map<ll, ll>",
      "#define sl set<ll>",
      "#define ff first",
      "#define ss second",
      "#define pb push_back",
      "#define ppb pop_back",
      "#define mp make_pair",
      "#define precised showpoint << fixed << setprecision(10)",
      "#define mx(x) max_element(all(x))",
      "#define mn(x) min_element(all(x))",
      "#define stringify(x) to_string(x)",
      "#define intify(x) stoi(x)",
      "#define endl '\\n'",
      "#define set_bits(x) __builtin_popcount(x)",
      "#define parity(x) __builtin_parity(x)",
      "#define clz(x) __builtin_clz(x)",
      "#define ctz(x) __builtin_ctz(x)",
      "#define next_power_of_2(x) (1 << (int)ceil(log2(x)))",
      "#define next_permutation(x) next_permutation(all(x))",
      "#define prev_permutation(x) prev_permutation(all(x))",
      "#define checksorted(v) is_sorted(v.begin(), v.end())",
      "#define gcd(a, b) __gcd(a, b)",
      "#define lcm(a, b) (a * b) / __gcd(a, b)",
      "#define sorta(arr, n) sort(arr, arr + n)",
      "#define sortar(arr, n) sort(arr, arr + n, greater<ll>())",
      "#define sortv(x) sort(x.begin(), x.end())",
      "#define sortvr(x) sort(x.begin(), x.end(), greater<ll>())",
      "#define debug(x) cerr << \": \" << x << endl",
      "#define _ \t\\",
      "\tll $; \t\\",
      "\tcin >> $; \\",
      "\twhile ($--)",
      "\nusing namespace std;\n",
      "// ------------------------FUNCTIONS------------------------\n",
      "bool isVowel(char a)",
      "{",
      "\treturn (a == 'a' || a == 'e' || a == 'i' || a == 'o' || a == 'u');",
      "}\n",
      "bool isPowerOfTwo(ll n)",
      "{",
      "\tif (n == 0)",
      "\t\treturn false;",
      "\treturn (ceil(log2(n)) == floor(log2(n)));",
      "}\n",
      "bool isPrime(ll n)",
      "{",
      "\tif (n <= 1)",
      "\t\treturn false;",
      "\tif (n <= 3)",
      "\t\treturn true;",
      "\tif (n % 2 == 0 || n % 3 == 0)",
      "\t\treturn false;",
      "\tfor (ll i = 5; i * i <= n; i = i + 6)",
      "\t\tif (n % i == 0 || n % (i + 2) == 0)",
      "\t\t\treturn false;",
      "\treturn true;",
      "}\n",
      "ll binarysearch(vl v, ll key)",
      "{",
      "\tll l = 0, r = v.size() - 1;",
      "\twhile (l <= r)",
      "\t{",
      "\t\tll m = l + (r - l) / 2;",
      "\t\tif (v[m] == key)",
      "\t\t\treturn m;",
      "\t\telse if (v[m] < key)",
      "\t\t\tl = m + 1;",
      "\t\telse",
      "\t\t\tr = m - 1;",
      "\t}",
      "\treturn -1;",
      "}\n",
      "ll nCr(ll n, ll r)",
      "{",
      "\tif (n < r)",
      "\t\treturn 0;",
      "\tif (r > n - r)",
      "\t\tr = n - r;",
      "\tll ans = 1;",
      "\tfor (ll i = 0; i < r; i++)",
      "\t{",
      "\t\tans *= (n - i);",
      "\t\tans /= (i + 1);",
      "\t}",
      "\treturn ans;",
      "}\n",
      "ll nPr(ll n, ll r)",
      "{",
      "\tif (n < r)",
      "\t\treturn 0;",
      "\tll ans = 1;",
      "\tfor (ll i = 0; i < r; i++)",
      "\t\tans *= (n - i);",
      "\treturn ans;",
      "}\n",
      "ll modmultiplication(ll a, ll b)",
      "{",
      "\ta %= MOD;",
      "\tll res = 0;",
      "\twhile (b > 0)",
      "\t{",
      "\t\tif (b & 1)",
      "\t\t\tres = (res + a) % MOD;",
      "\t\ta = (2 * a) % MOD;",
      "\t\tb >>= 1;",
      "\t}",
      "\treturn res;",
      "}\n",
      "ll modexpo(ll x, ll p)",
      "{",
      "\tx %= MOD;",
      "\tll res = 1;",
      "\twhile (p > 0)",
      "\t{",
      "\t\tif (p & 1)",
      "\t\t\tres = res * x % MOD;",
      "\t\tx = x * x % MOD;",
      "\t\tp >>= 1;",
      "\t}",
      "\treturn res;",
      "}\n",
      "ll modInverse(ll n)",
      "{",
      "\treturn modexpo(n, MOD - 2);",
      "}\n",
      "bool palindrome(string &s)",
      "{",
      "\tstring t = s;",
      "\treverse(all(t));",
      "\treturn t == s;",
      "}\n",
      "vector<ll> sieve(ll n)",
      "{",
      "\tvector<bool> prime(n + 1, true);",
      "\tvector<ll> primes;",
      "\tfor (ll p = 2; p * p <= n; p++)",
      "\t{",
      "\t\tif (prime[p])",
      "\t\t{",
      "\t\t\tfor (ll i = p * 2; i <= n; i += p)",
      "\t\t\t{",
      "\t\t\t\tprime[i] = false;",
      "\t\t\t}",
      "\t\t}",
      "\t}",
      "\tfor (ll p = 2; p <= n; p++)",
      "\t{",
      "\t\tif (prime[p])",
      "\t\t{",
      "\t\t\tprimes.push_back(p);",
      "\t\t}",
      "\t}",
      "\treturn primes;",
      "}\n",
      "ll lis(vector<ll> &a)",
      "{",
      "\tll n = a.size();",
      "\tvector<ll> dp(n, 1);",
      "\tfor(ll i = 1; i < n; i++)",
      "\t{",
      "\t\tfor(ll j = 0; j < i; j++)",
      "\t\t{",
      "\t\t\tif(a[i] > a[j])",
      "\t\t\t{",
      "\t\t\t\tdp[i] = max(dp[i], dp[j] + 1);",
      "\t\t\t}",
      "\t\t}",
      "\t}",
      "\treturn *max_element(all(dp));",
      "}\n",
      "ll mre(vector<ll> &a)",
      "{",
      "\n\tll n = a.size(), max = 0, id = -1;",
      "\tloop(i, 0, n)",
      "\t{",
      "\t\ta[a[i] % n] += n;",
      "\t}",
      "\tloop(i, 0, n)",
      "\t{",
      "\t\tif(a[i] / n > max)",
      "\t\t{",
      "\t\t\tmax = a[i] / n;",
      "\t\t\tid = i;",
      "\t\t}",
      "\t}",
      "\treturn id;",
      "}\n",
      "bool sortsec(const pl &a, const pl &b)",
      "{",
      "\treturn (a.second < b.second);",
      "}\n",
      "template <typename T>",
      "void printv(vector<T> &v)",
      "{",
      "\tfor (auto &i : v)",
      "\t{",
      "\t\tcout << i << \" \";",
      "\t}",
      "\tcout << endl;",
      "}\n",
      "// ------------------------SOLUTION------------------------\n",
      "void fn()",
      "{",
      "\t$1",
      "}\n",
      "// ------------------------INITIALIZATION------------------------\n",
      "int32_t main()",
      "{",
      "\tios_base::sync_with_stdio(false);",
      "\tcin.tie(NULL);",
      "#ifndef ONLINE_JUDGE",
      "\tfreopen(\"input.txt\", \"r\", stdin);",
      "\tfreopen(\"output.txt\", \"w\", stdout);",
      "\tfreopen(\"error.txt\", \"w\", stderr);",
      "#endif",
      "\t_ fn();",
      "\tcerr << \"Time taken : \" << (float)clock() / CLOCKS_PER_SEC << \" seconds\" << endl;",
      "//for (ll i = 0; i < t; i++) // For kickstart",
      "//{",
      "//\tcout << \"Case #\" << i + 1 << \": \";",
      "//\tfn();",
      "//cout<<endl;",
      "//}",
      "\treturn 0;",
      "}\n",
      "/*",
      "world's a hell Thee made in oath;",
      "truth the lies and lies lay forth;",
      "*/\n"
    ],
    "description": "Problem template"
  }
}
